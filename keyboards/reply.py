"""
–ú–æ–¥—É–ª—å –æ–±—ã—á–Ω—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è Armenian Learning Bot.

–°–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—ã—á–Ω—ã—Ö (reply) –∫–ª–∞–≤–∏–∞—Ç—É—Ä.
"""

from typing import List, Optional
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove

def get_start_keyboard() -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç —Å—Ç–∞—Ä—Ç–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏.
    
    Returns:
        –û–±—ã—á–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏.
    """
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    
    keyboard.row(
        KeyboardButton("üìö –£—á–∏—Ç—å"),
        KeyboardButton("üîÑ –ü–æ–≤—Ç–æ—Ä—è—Ç—å"),
        KeyboardButton("üéÆ –ò–≥—Ä—ã")
    )
    
    keyboard.row(
        KeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
        KeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
        KeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å")
    )
    
    return keyboard

def get_language_keyboard() -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.
    
    Returns:
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ —è–∑—ã–∫–∞–º–∏.
    """
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    
    keyboard.row(
        KeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π"),
        KeyboardButton("üá¶üá≤ –ê—Ä–º—è–Ω—Å–∫–∏–π"),
        KeyboardButton("üá¨üáß English")
    )
    
    return keyboard

def get_remove_keyboard() -> ReplyKeyboardRemove:
    """
    –°–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
    
    Returns:
        –û–±—ä–µ–∫—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
    """
    return ReplyKeyboardRemove()

def get_contact_keyboard() -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∑–∞–ø—Ä–æ—Å–æ–º –∫–æ–Ω—Ç–∞–∫—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    
    Returns:
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞.
    """
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    
    keyboard.add(KeyboardButton(
        "üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º",
        request_contact=True
    ))
    
    keyboard.add(KeyboardButton("–û—Ç–º–µ–Ω–∞"))
    
    return keyboard

def get_location_keyboard() -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∑–∞–ø—Ä–æ—Å–æ–º –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    
    Returns:
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –∑–∞–ø—Ä–æ—Å–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è.
    """
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    
    keyboard.add(KeyboardButton(
        "üìç –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º",
        request_location=True
    ))
    
    keyboard.add(KeyboardButton("–û—Ç–º–µ–Ω–∞"))
    
    return keyboard

def get_quiz_answer_keyboard(options: List[str]) -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∞.
    
    Args:
        options: –°–ø–∏—Å–æ–∫ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤.
        
    Returns:
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤.
    """
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ 2 –≤ —Ä—è–¥
    row = []
    for idx, option in enumerate(options):
        row.append(KeyboardButton(option))
        
        if idx % 2 == 1 or idx == len(options) - 1:
            keyboard.row(*row)
            row = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–æ–ø—É—Å–∫–∞
    keyboard.row(KeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"))
    
    return keyboard

def get_continue_keyboard() -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.
    
    Returns:
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.
    """
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(KeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"))
    return keyboard

def get_yes_no_keyboard() -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–î–∞" –∏ "–ù–µ—Ç".
    
    Returns:
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–î–∞" –∏ "–ù–µ—Ç".
    """
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    
    keyboard.row(
        KeyboardButton("–î–∞"),
        KeyboardButton("–ù–µ—Ç")
    )
    
    return keyboard

def get_difficulty_keyboard() -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.
    
    Returns:
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —É—Ä–æ–≤–Ω—è–º–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.
    """
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    
    keyboard.row(
        KeyboardButton("–õ–µ–≥–∫–∏–π"),
        KeyboardButton("–ù–æ—Ä–º–∞–ª—å–Ω—ã–π")
    )
    
    keyboard.row(
        KeyboardButton("–°–ª–æ–∂–Ω—ã–π"),
        KeyboardButton("–≠–∫—Å–ø–µ—Ä—Ç")
    )
    
    keyboard.row(KeyboardButton("–û—Ç–º–µ–Ω–∞"))
    
    return keyboard

def get_rating_keyboard() -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –∑–Ω–∞–Ω–∏—è —Å–ª–æ–≤–∞.
    
    Returns:
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ—Ü–µ–Ω–∫–∞–º–∏ –æ—Ç 0 –¥–æ 5.
    """
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    
    keyboard.row(
        KeyboardButton("0 - –ó–∞–±—ã–ª"),
        KeyboardButton("1 - –ü–æ—á—Ç–∏")
    )
    
    keyboard.row(
        KeyboardButton("2 - –¢—Ä—É–¥–Ω–æ"),
        KeyboardButton("3 - –° —É—Å–∏–ª–∏–µ–º")
    )
    
    keyboard.row(
        KeyboardButton("4 - –•–æ—Ä–æ—à–æ"),
        KeyboardButton("5 - –û—Ç–ª–∏—á–Ω–æ")
    )
    
    return keyboard

def get_custom_keyboard(buttons: List[str], row_width: int = 2) -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏.
    
    Args:
        buttons: –°–ø–∏—Å–æ–∫ —Ç–µ–∫—Å—Ç–æ–≤ –∫–Ω–æ–ø–æ–∫.
        row_width: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥—É.
        
    Returns:
        –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.
    """
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    
    # –†–∞–∑–±–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞ —Ä—è–¥—ã
    row = []
    for idx, button_text in enumerate(buttons):
        row.append(KeyboardButton(button_text))
        
        if idx % row_width == row_width - 1 or idx == len(buttons) - 1:
            keyboard.row(*row)
            row = []
    
    return keyboard